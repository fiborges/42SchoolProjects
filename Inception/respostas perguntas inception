1. Como funciona o Docker e o Docker Compose?

Resposta:
Docker é uma plataforma de contêinerização que permite encapsular aplicações e suas dependências em contêineres. Isso garante que a aplicação funcione de forma consistente em qualquer ambiente. Docker Compose é uma ferramenta para definir e gerenciar aplicações multi-contêiner. Com Docker Compose, você pode usar um arquivo YAML para configurar serviços, redes e volumes, e com um único comando, criar e iniciar todos os serviços definidos.
2. Qual é a diferença entre uma imagem Docker usada com e sem Docker Compose?

Resposta:
Usar uma imagem Docker individualmente geralmente envolve a construção e execução de um único contêiner. Docker Compose, por outro lado, é usado para gerenciar múltiplos contêineres como uma única aplicação interconectada. Com o Docker Compose, você pode automatizar o processo de orquestração de contêineres, simplificando a gestão de serviços dependentes, como um servidor web e um banco de dados, em um único arquivo de configuração.
3. Quais são as vantagens do Docker em comparação com máquinas virtuais tradicionais?

Resposta:
Docker utiliza menos recursos do que máquinas virtuais tradicionais, pois contêineres compartilham o mesmo kernel do sistema operacional host e iniciam muito mais rápido. Docker proporciona um isolamento eficiente e garante que cada aplicação possa ter suas próprias dependências sem interferir com outras aplicações. Além disso, Docker facilita a integração contínua e entrega contínua (CI/CD) devido à sua portabilidade e consistência em diferentes ambientes.
4. Por que você escolheu essa estrutura de diretórios específica para o projeto?

Resposta:
A estrutura de diretórios foi escolhida para organizar claramente os recursos e configurações relacionados a diferentes serviços dentro do projeto. Por exemplo, separar o NGINX, WordPress e MariaDB em diferentes subdiretórios dentro de srcs facilita a manutenção e escalabilidade do projeto. Cada serviço tem seu próprio Dockerfile e arquivos de configuração, o que ajuda a isolar configurações e facilita atualizações e depurações.
5. Explique como você configurou o NGINX e o SSL/TLS.

Resposta:
O NGINX foi configurado como um proxy reverso para o WordPress, servindo conteúdo sobre HTTPS usando SSL/TLS. Um certificado SSL foi gerado, e as configurações de SSL foram especificadas no arquivo nginx.conf para garantir comunicações seguras. As diretivas SSL incluem especificações para protocolos seguros e cifras, além de otimizações para melhor desempenho e segurança.
6. Como o WordPress é instalado e configurado no seu projeto?

Resposta:
O WordPress é instalado dentro de um contêiner Docker que utiliza uma imagem base do Debian. Um script no Dockerfile cuida da instalação do WordPress juntamente com as extensões necessárias do PHP. As configurações do WordPress, incluindo a conexão com o banco de dados MariaDB, são gerenciadas através de variáveis de ambiente e arquivos de configuração que são seguros e não expõem informações sensíveis.
7. Como você garante a segurança e o isolamento do banco de dados MariaDB?

Resposta:
O isolamento do MariaDB é assegurado utilizando redes Docker internas, o que impede o acesso externo ao banco de dados, exceto através de serviços específicos como o WordPress. Configurações de segurança no my.cnf do MariaDB são aplicadas para restringir conexões, e usuários e permissões são cuidadosamente gerenciados para garantir que apenas entidades autorizadas possam acessar ou modificar os dados.

REsposta:
Uso de Volumes Docker: Os contêineres do WordPress e do MariaDB foram configurados para utilizar volumes Docker para armazenar dados persistentes fora dos contêineres. Isso permite que os dados, como uploads de mídia no WordPress e dados do banco de dados MariaDB, persistam mesmo quando os contêineres são reiniciados ou substituídos.

Configuração Adequada dos Volumes: Os volumes Docker foram configurados com políticas de retenção apropriadas para garantir a integridade e a persistência dos dados. Além disso, foram utilizados volumes nomeados para facilitar a identificação e o gerenciamento dos dados persistidos.

Backup Regular dos Dados: Foi implementado um procedimento de backup regular para os dados persistentes, incluindo o conteúdo do WordPress e o banco de dados MariaDB. Isso garante que, em caso de falha ou perda de dados, seja possível restaurar os dados a partir dos backups mais recentes.

Monitoramento dos Volumes: Foram implementados mecanismos de monitoramento para os volumes Docker, a fim de detectar e mitigar problemas de armazenamento, como falta de espaço em disco ou corrupção de dados. Isso ajuda a garantir a integridade e a disponibilidade dos dados persistido

