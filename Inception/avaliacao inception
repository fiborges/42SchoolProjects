Avaliar INCEPTION

sudo nano /etc/hosts
127.0.0.1       localhost
127.0.1.1       Inception.myguest.virtualbox.org        Inception
127.0.1.1       firibeir.42.fr


sudo usermod -aG docker $USER
newgrp docker

APAGAR TUDO!

docker stop $(docker ps -a -q)
docker rm $(docker ps -q -a)
docker rmi -f $(docker images -q)
docker network rm $(docker network ls -q)
docker volume rm $(docker volume ls -q)
docker system prune -f

docker ps
docker ps -a
docker volume ls
docker volume inspect src_mariadb e src_wordpress
docker network ls
docker network inspect incepction host bridge



---------------------------------------------------------------------------

ExaminAR o docker-compose.yml:
Verifique se não há uso de network: host ou links:

grep "network: host" ./srcs/docker-compose.yml
grep "links" ./srcs/docker-compose.yml

--------------------------------------------------------------------------------------------

make
---------------------------------------------------------------------------------------------

NGINX:
Certifique-se de que o NGINX só pode ser acessado pela porta 443 (HTTPS) e está configurado com SSL/TLS:

curl -I http://localhost  # Deve falhar
curl -kI https://localhost  # Deve funcionar

-------------------------------------------------------------------------------------


WordPress:
Verifique se o WordPress está instalado e configurado corretamente:

curl -kI https://localhost/wp-admin

--------------------------------------------------------------------------------------------------


MariaDB:
Garanta que o MariaDB está operando e acessível apenas pelos contêineres necessários, sem acesso externo.

exemplo:
verificar a configuração de rede no arquivo docker-compose.yml para garantir que o MariaDB não está exposto a redes externas. MariaDB deve estar em uma rede interna com outros serviços que precisam acessá-lo, como o WordPress.

services:
  mariadb:
    image: mariadb
    networks:
      - backend
    # Outras configurações...

make maria_shell
service mysql status
pass:
SHOW DATABASES;
SHOW TABLES;
SELECT * FROM wp_comments;



SHOW TABLES;
CREATE DATABASE IF NOT EXISTS exemplo;
USE exemplo;
CREATE TABLE clientes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    idade INT
);

INSERT INTO clientes (nome, email, idade) VALUES ('João Silva', 'joao.silva@email.com', 30);
INSERT INTO clientes (nome, email, idade) VALUES ('Maria Souza', 'maria.souza@email.com', 25);
INSERT INTO clientes (nome, email, idade) VALUES ('Carlos Pereira', 'carlos.pereira@email.com', 28);

SELECT * FROM clientes;


UPDATE clientes SET idade = 31 WHERE nome = 'João Silva';

DELETE FROM clientes WHERE nome = 'Carlos Pereira';

exit;




examine o Dockerfile de MariaDB para garantir que não há comandos que expõem o MariaDB ao mundo externo

mysql -h 127.0.0.1 -u root -p
----------------------------------------------------------------------------------------------------
Examine os logs do contêiner do MariaDB para identificar se há tentativas de conexão não autorizadas ou outros erros.


docker logs mariadb

------------------------------------------------------------------------------------------------

Checar Volumes:
Garanta que os volumes para MariaDB e WordPress existem e estão montados nos locais corretos:


docker volume inspect mariadb_volume
docker volume inspect wordpress_volume

--------------------------------------------------------------
Acessar o Site via HTTPS:

Abra um navegador e acesse o site usando o endereço configurado, por exemplo, https://firibeir.42.fr.
Verifique se o site carrega corretamente usando o protocolo HTTPS. Isto também testará se o SSL/TLS está configurado corretamente.

Acesse https://firibeir.42.fr/wp-admin.
Tente fazer login com as credenciais fornecidas ou configuradas pelo estudante.
Verifique se o painel de administração é acessível e funcional.

Crie uma postagem ou página para ver se o WordPress está operando normalmente.
Faça upload de um arquivo de mídia para testar se os diretórios de dados estão configurados corretamente e se têm as permissões necessárias.
Verifique links internos e funcionalidades de navegação para assegurar que tudo está integrado corretamente.

-----------------------------------------------------------------------------------------------
Acesso ao Contêiner do WordPress:
Primeiramente, você precisa acessar o shell dentro do contêiner do WordPress. Você pode fazer isso usando o comando docker exec.


docker exec -it wordpress bash

----------------------------------------------------------------------------------------------
Testar Persistência:

Faça alterações no WordPress.
Reinicie os contêineres e verifique se as alterações persistem:

docker-compose down
docker-compose up --detach

--------------------------------------------------------------------------------------------
Logs e Limpeza:

Verifique os logs para erros:
docker logs [nome_do_contêiner]

Limpeza final após a avaliação:

LIMPAR TUDO!

docker-compose down
docker volume rm $(docker volume ls -q)
docker network rm $(docker network ls -q)


perguntas:
Como funciona o Docker e o Docker Compose?
Qual é a diferença entre uma imagem Docker usada com e sem Docker Compose?
Quais são as vantagens do Docker em comparação com máquinas virtuais tradicionais?
Por que você escolheu essa estrutura de diretórios específica para o projeto?

Explique como você configurou o NGINX e o SSL/TLS.
Como o WordPress é instalado e configurado no seu projeto?
Como você garante a segurança e o isolamento do banco de dados MariaDB?
Quais medidas você tomou para garantir a persistência de dados?



